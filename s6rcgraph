#! /bin/env python

import os
import pprint
import sys

hm = { 'bundle':[], 'longrun':[], 'oneshot':[] }
pipes = []

def get_content(path):
    ret = None
    if os.path.isfile(path):
        f = open(path, 'r')
        ret = f.read().strip().split('\n')
        f.close()
    return ret

def get_type(dir_name):
    return get_content(dir_name + '/type')[0]

def get_dependencies(rc_type, dir_name):
    return get_content(dir_name + ('/dependencies', '/contents')[(rc_type == 'bundle')])

def get_consumers(dir_name):
    return get_content(dir_name + '/consumer-for')

def process_path(path):
    global pipes
    for dir_name in os.listdir(path):
        full_path = path + "/" + dir_name
        if dir_name[0] == '.':
            continue
        rc_type = get_type(full_path)
        hm[rc_type] += [{ dir_name: get_dependencies(rc_type, full_path)}]
        consumers = get_consumers(full_path)
        if consumers:
            pipes += [{ dir_name: consumers }]

if len(sys.argv) == 1:
    print("usage: s6rcgraph source...")
    sys.exit(1)

direcotires = sys.argv[1:]

for directory in direcotires:
    process_path(directory)

#pprint.pprint(hm)
#pprint.pprint(pipes)

print("digraph G {")
print("\tnode [ shape = box ]")

def print_svc_type_subgraph(svc_type, color):
    print("\tsubgraph {} {{".format(svc_type))
    print("\t\tnode [ color = {} ]".format(color))
    for j in hm[svc_type]:
        for k in j:
            print('\t\t"' + k + '"')
    print("\t}")

print_svc_type_subgraph('bundle', 'orange')
print_svc_type_subgraph('longrun', 'red')
print_svc_type_subgraph('oneshot', 'black')

for i in hm:
#    if i == 'bundle':
#        continue
    for j in hm[i]:
        for k in j:
            if j[k]:
                for l in j[k]:
                    if len(l):
                        print('\t"' + k + '" -> "' + l + '"')

print("\tsubgraph log {")
print("\t\tedge [ color = blue, style = dotted ]")
for i in pipes:
    for j in i:
        for k in i[j]:
            print('\t\t"' + k + '" -> "' + j + '"')
print("\t}")

print("}")
